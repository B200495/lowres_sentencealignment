"""
Create combined alignment file from multiple different ones. 
"""

#### CONSTANTS ####

book="vecaligntest"

total_lines = 221

indices_outfile = f"/work/tc046/tc046/s2252632/vecalign/{book}_src/method2_finalalignment/method2_finalalignment_indices"

# obtain list from dict_transl/method2_piecetogether.py
replacement_inds = ['[1]:[1]:1.133586', '[3]:[3]:0.822157', '[6]:[6, 7, 8]:0.566995', '[7]:[9]:1.008135', '[8]:[10]:1.160771', '[9]:[11, 12]:0.411700', '[10]:[13]:1.003623', '[13]:[17]:1.014007', '[17]:[23, 24, 25]:0.629868', '[21]:[29]:0.462170', '[23]:[31, 32]:0.593071', '[24]:[33, 34]:0.546780', '[25]:[35]:0.810346', '[27]:[39]:0.860291', '[28]:[40]:0.778381', '[30]:[43]:1.010718', '[32]:[45, 46]:0.444592', '[36]:[51, 52]:0.643263', '[37]:[53, 54, 55]:0.504044', '[39]:[57]:0.626874', '[40]:[58, 59, 60]:0.575948', '[43]:[67]:0.648234', '[44]:[68, 69, 70]:0.596342', '[46]:[72]:0.839704', '[48]:[74]:0.445423', '[50]:[76]:0.924399', '[56]:[84]:0.654805', '[61]:[90]:0.893332', '[62]:[91, 92]:0.616483', '[63]:[93, 94, 95]:0.710719', '[64]:[96, 97]:0.729504', '[68]:[104, 105]:0.665492', '[69]:[106]:0.727600', '[70]:[107]:0.860781', '[71]:[108]:0.954124', '[75]:[113]:1.023071', '[78]:[116, 117, 118]:0.621525', '[83]:[126, 127]:0.804632', '[85]:[129, 130, 131, 132]:0.538883', '[86]:[133, 134]:0.676130', '[88]:[136, 137]:0.867362', '[89]:[138, 139]:0.674143', '[94]:[147]:0.943783', '[95]:[148]:0.825063', '[101]:[161]:0.900041', '[102]:[162]:0.930582', '[103]:[163]:1.319103', '[104]:[164]:1.037107', '[105]:[165]:0.686365', '[106]:[166, 167]:0.577841', '[108]:[169, 170]:0.785704', '[111]:[173]:0.878282', '[112]:[174, 175, 176]:0.672004', '[114]:[178]:0.160920', '[115]:[179]:1.028559', '[116]:[180]:0.698197', '[117]:[181]:0.728075', '[120]:[184, 185]:0.783768', '[121]:[186]:1.028255', '[122]:[187]:0.522201', '[123]:[188]:0.633316', '[129]:[196]:0.538775', '[135]:[203]:0.597529', '[136]:[204]:0.659831', '[141]:[209]:0.978658', '[143]:[211, 212]:0.401825', '[145]:[214]:0.446053', '[146]:[215]:0.517309', '[153]:[227]:0.424148', '[154]:[228]:0.576653', '[155]:[229]:0.736509', '[156]:[230]:0.508503', '[159]:[234]:0.658796', '[160]:[235]:1.088584', '[161]:[236]:1.091120', '[163]:[238]:0.840116', '[165]:[240]:0.792596', '[166]:[241]:0.766829', '[167]:[242, 243, 244]:0.478469', '[168]:[245, 246, 247]:0.679505', '[169]:[248]:0.834472', '[170]:[249]:0.751051', '[171]:[250]:0.506151', '[172]:[251]:0.615058', '[173]:[252]:0.614080', '[174]:[253]:0.918502', '[175]:[254]:0.900381', '[176]:[255, 256]:0.708147', '[177]:[257]:0.921269', '[178]:[258]:0.251797', '[179]:[259]:0.996970', '[180]:[260]:1.029228', '[181]:[261]:1.117186', '[182]:[262]:0.704845', '[183]:[263]:0.751165', '[184]:[264]:0.768133', '[185]:[265]:0.691368', '[186]:[266, 267]:0.730705', '[187]:[268, 269]:0.615422', '[188]:[270]:0.779719', '[189]:[271, 272, 273]:0.625927', '[190]:[274]:0.745486', '[191]:[275]:0.667102', '[192]:[276, 277]:0.586419', '[193]:[278]:0.708200', '[194]:[279]:0.958690', '[195]:[280]:0.861837', '[196]:[281]:1.173480', '[197]:[282, 283]:0.644697', '[198]:[284]:1.096030', '[199]:[285]:0.983703', '[200]:[286]:0.958879', '[201]:[287]:0.822974', '[202]:[288]:0.812184', '[203]:[289]:0.870201', '[204]:[290, 291, 292, 293, 294, 295, 296]:0.573616', '[205]:[297]:0.899896', '[206]:[298, 299, 300]:0.564806', '[207]:[301, 302, 303]:0.604697', '[208]:[304, 305]:0.691879', '[209]:[306, 307, 308]:0.551869', '[210]:[309]:0.763479', '[211]:[310, 311]:0.741015', '[212]:[312, 313]:0.531999', '[213]:[314]:0.771929', '[214]:[315]:0.903826', '[215]:[316]:0.843354', '[216]:[317, 318, 319, 320]:0.528571', '[217]:[321]:0.779997', '[218]:[322]:0.752625', '[219]:[323]:0.693403', '[220]:[324]:0.836884', '[221]:[325]:1.008293']

# obtain list from dict_transl/method2_piecetogether.py
replace_these_lines = [1, 3, 6, 7, 8, 9, 10, 13, 17, 21, 23, 24, 25, 27, 28, 30, 32, 36, 37, 39, 40, 43, 44, 46, 48, 50, 56, 61, 62, 63, 64, 68, 69, 70, 71, 75, 78, 83, 85, 86, 88, 89, 94, 95, 101, 102, 103, 104, 105, 106, 108, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 135, 136, 141, 143, 145, 146, 153, 154, 155, 156, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221]

#### FUNCTIONS ####

def read_file(filepath):
    """ Reads file line-by-line into list object """
    data_list = []
    with open(filepath, 'r') as in_file:
        for line in in_file:
            data_list.append(line)
    return data_list

#### CODE ####

new_alignment_file = []

# iterate through line number alignment files
for i in range(0, total_lines + 1):
    num = str(i) # line number
    
    engline_alignment_file = read_file(f"/work/tc046/tc046/s2252632/vecalign/{book}_src/method2_alignmentfiles/aligned_01_line{num}_raw.txt")
    engline_alignment_file = [item.strip() for item in engline_alignment_file] # remove \n
    
    if num in replace_these_lines:
        new_list = [item for item in replacement_inds if item.startswith(f"[{num}]:")]
        new_alignment_file.extend(new_list)
    else:    
        # find the line which has [0] before first colon.
        
        # replace 0 with line number and write alignment to file. IF iteration number is in replace_these_lines then write that corresponding alignment to new alignment file instead. 
        for alignment_line in engline_alignment_file:
            if alignment_line.startswith("[0]:"):
                pieces = alignment_line.split(":")
                pieces[0] = f"[{num}]"
                alignment_line = ":".join(pieces)
                new_alignment_file.append(alignment_line)
 
with open(indices_outfile, 'w') as output:
    for line in new_alignment_file:
        output.write(line + '\n')

print("finished")